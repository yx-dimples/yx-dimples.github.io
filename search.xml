<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Javascript</title>
    <url>/2021/07/30/JavaScript---%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="3-1常用的事件"><a href="#3-1常用的事件" class="headerlink" title="3-1常用的事件"></a>3-1常用的事件</h2><h4 id="1-常用的事件"><a href="#1-常用的事件" class="headerlink" title="1.常用的事件"></a>1.常用的事件</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">onclick     点击事件</span><br><span class="line">onmouseover 鼠标悬停</span><br><span class="line">onmouseout  鼠标移出</span><br><span class="line">onchange    元素改变</span><br><span class="line">onkeydown   按下键盘</span><br><span class="line">onkeyup    松开键盘</span><br><span class="line">onload     浏览器完成页面加载</span><br><span class="line">onblur     元素失去焦点</span><br><span class="line">onfocus    元素获得焦点</span><br><span class="line">onscroll   滚动事件（scrollTop获取滚动条距离顶部的高度）</span><br><span class="line">onresize   当浏览器被重置大小时触发</span><br><span class="line">onmousemove 鼠标移动</span><br><span class="line">onmousedown 鼠标按下</span><br><span class="line">onmouseup 鼠标松开</span><br></pre></td></tr></table></figure>
<h4 id="2-获取键盘码"><a href="#2-获取键盘码" class="headerlink" title="2.获取键盘码"></a>2.获取键盘码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">input.onkeyup = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="comment">/* keyCode返回一个键盘码 */</span></span><br><span class="line">    <span class="keyword">if</span>(event.keyCode==<span class="number">13</span>)&#123; <span class="comment">//回车键：13</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-实现淡入淡出效果的方法"><a href="#3-实现淡入淡出效果的方法" class="headerlink" title="3.实现淡入淡出效果的方法"></a>3.实现淡入淡出效果的方法</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">is(<span class="string">&quot;:visible&quot;</span>) 判断一个元素是否可见</span><br><span class="line">fadeIn   淡入</span><br><span class="line">fadeOut  淡出</span><br><span class="line">fadeToggle() 淡入淡出</span><br><span class="line">fadeTo(speed,opacity,callback)</span><br></pre></td></tr></table></figure>
<h2 id="3-2获取窗口属性"><a href="#3-2获取窗口属性" class="headerlink" title="3-2获取窗口属性"></a>3-2获取窗口属性</h2><h4 id="1-获取可视区域的高度和宽度"><a href="#1-获取可视区域的高度和宽度" class="headerlink" title="1.获取可视区域的高度和宽度"></a>1.获取可视区域的高度和宽度</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.documentElement.clientWidth</span><br><span class="line"><span class="built_in">document</span>.documentElement.clientHeight</span><br></pre></td></tr></table></figure>
<h4 id="2-获取滚动区域的宽高"><a href="#2-获取滚动区域的宽高" class="headerlink" title="2.获取滚动区域的宽高"></a>2.获取滚动区域的宽高</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.documentElement.scrollWidth</span><br><span class="line"><span class="built_in">document</span>.documentElement.scrollHeight</span><br></pre></td></tr></table></figure>
<h4 id="3-鼠标距离X-Y轴的距离"><a href="#3-鼠标距离X-Y轴的距离" class="headerlink" title="3.鼠标距离X,Y轴的距离"></a>3.鼠标距离X,Y轴的距离</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">event.pageX</span><br><span class="line">event.clientX</span><br><span class="line"><span class="keyword">var</span> pageX = event.clientX; <span class="comment">//获取鼠标距离X轴距离</span></span><br><span class="line"><span class="keyword">var</span> pageY = event.clientY; <span class="comment">//获取鼠标距离y轴距离</span></span><br></pre></td></tr></table></figure>
<h4 id="4-判断滚动条是否到达底部"><a href="#4-判断滚动条是否到达底部" class="headerlink" title="4.判断滚动条是否到达底部"></a>4.判断滚动条是否到达底部</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onReachBottom</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/* 获取滚动区域的高度 */</span></span><br><span class="line">    <span class="keyword">var</span> dh = <span class="built_in">document</span>.documentElement.scrollHeight;</span><br><span class="line">    <span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> sh = <span class="built_in">Math</span>.ceil(<span class="built_in">document</span>.documentElement.scrollTop);</span><br><span class="line">        <span class="keyword">var</span> ah = <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line">        <span class="keyword">if</span>(sh+ah == dh)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;到达底部&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    onReachBottom()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- jquery --&gt;</span><br><span class="line"><span class="keyword">var</span> scrollHeight = $(<span class="built_in">document</span>).height();</span><br><span class="line"><span class="keyword">var</span> availHeight = $(<span class="built_in">window</span>).height();</span><br><span class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> scrollTop = $(<span class="built_in">document</span>).scrollTop();</span><br><span class="line">    <span class="keyword">if</span>(scrollTop+availHeight==scrollHeight)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;到达底部&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="3-2-1回到顶部"><a href="#3-2-1回到顶部" class="headerlink" title="3-2-1回到顶部"></a>3-2-1回到顶部</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* javascript */</span></span><br><span class="line">test.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="built_in">document</span>.body.scrollTop = <span class="built_in">document</span>.documentElement.scrollTop = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* jquery */</span></span><br><span class="line">$(<span class="string">&quot;body,html&quot;</span>).animate(&#123;<span class="attr">scrollTop</span>:<span class="number">0</span>&#125;,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure>
<h3 id="3-2-2-瀑布流"><a href="#3-2-2-瀑布流" class="headerlink" title="3-2-2 瀑布流"></a>3-2-2 瀑布流</h3><h4 id="1-手工瀑布流"><a href="#1-手工瀑布流" class="headerlink" title="1.手工瀑布流"></a>1.手工瀑布流</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, <span class="attribute">initial</span>-scale=<span class="number">1.0</span>&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; <span class="attribute">content</span>=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;script <span class="attribute">src</span>=&quot;https://cdn.bootcss.com/jquery/<span class="number">3.4</span>.<span class="number">1</span>/jquery.js<span class="string">&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Document&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">        *&#123;margin:0;padding:0&#125;</span></span><br><span class="line"><span class="string">        img&#123;</span></span><br><span class="line"><span class="string">            width:240px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .item&#123;</span></span><br><span class="line"><span class="string">            border:1px solid rgb(131, 130, 130);</span></span><br><span class="line"><span class="string">            padding:20px;</span></span><br><span class="line"><span class="string">            float: left;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;</span>content<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">01</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">02</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">03</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">04</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">05</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">06</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">07</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">08</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">09</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">10</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">11</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">12</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">        /* 1.一排能放置几张图片 */</span></span><br><span class="line"><span class="string">        window.onload = function()&#123;</span></span><br><span class="line"><span class="string">            var ww = $(window).width()</span></span><br><span class="line"><span class="string">            var itemWidth = $(&quot;</span>.item<span class="string">&quot;).outerWidth();</span></span><br><span class="line"><span class="string">            var num =  Math.floor(ww/itemWidth);</span></span><br><span class="line"><span class="string">            /* 2.将第一排的高度放置在一个数组中 */</span></span><br><span class="line"><span class="string">            var arrHeight = []</span></span><br><span class="line"><span class="string">            $(&quot;</span>.item<span class="string">&quot;).each((index,item)=&gt;&#123;</span></span><br><span class="line"><span class="string">                if(index&lt;num)&#123;</span></span><br><span class="line"><span class="string">                    var itemHeight = $(item).outerHeight();</span></span><br><span class="line"><span class="string">                    arrHeight.push(itemHeight)</span></span><br><span class="line"><span class="string">                &#125;else&#123;</span></span><br><span class="line"><span class="string">                    /* 3.从高度最小的地方开发放置图片 */</span></span><br><span class="line"><span class="string">                    var minHeight = Math.min(...arrHeight);</span></span><br><span class="line"><span class="string">                    var minIndex = arrHeight.indexOf(minHeight);</span></span><br><span class="line"><span class="string">                    var offsetLeft = $(&quot;</span>.item<span class="string">&quot;).eq(minIndex).offset().left;</span></span><br><span class="line"><span class="string">                    $(&quot;</span>.item<span class="string">&quot;).eq(index).css(&#123;position:&#x27;absolute&#x27;,top:minHeight,left:offsetLeft&#125;)</span></span><br><span class="line"><span class="string">                    /* 4.重置数组中的最小高度 */</span></span><br><span class="line"><span class="string">                    arrHeight[minIndex]=minHeight +$(&quot;</span>.item<span class="string">&quot;).eq(index).outerHeight();</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string">            console.log(arrHeight)</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="2-从接口获取图片渲染成瀑布流"><a href="#2-从接口获取图片渲染成瀑布流" class="headerlink" title="2.从接口获取图片渲染成瀑布流"></a>2.从接口获取图片渲染成瀑布流</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, <span class="attribute">initial</span>-scale=<span class="number">1.0</span>&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; <span class="attribute">content</span>=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;script <span class="attribute">src</span>=&quot;https://cdn.bootcss.com/jquery/<span class="number">3.4</span>.<span class="number">1</span>/jquery.js<span class="string">&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script src=&quot;</span>lib/base.js<span class="string">&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Document&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">        * &#123;</span></span><br><span class="line"><span class="string">            margin: 0;</span></span><br><span class="line"><span class="string">            padding: 0</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        img &#123;</span></span><br><span class="line"><span class="string">            width: 240px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        .item &#123;</span></span><br><span class="line"><span class="string">            border: 1px solid rgb(131, 130, 130);</span></span><br><span class="line"><span class="string">            padding: 20px;</span></span><br><span class="line"><span class="string">            float: left;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;</span>content<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">01</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">02</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">03</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">04</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">05</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">06</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">07</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">08</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">09</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">10</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">11</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;</span>item<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;</span>images/<span class="number">12</span>.jpg<span class="string">&quot; alt=&quot;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">        /* 假设是从服务器取得的数据 */</span></span><br><span class="line"><span class="string">        var url = &#123;</span></span><br><span class="line"><span class="string">            dataUrl: [&#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">01</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">02</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">03</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">04</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">05</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">06</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">07</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">08</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">09</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">10</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">11</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;, &#123;</span></span><br><span class="line"><span class="string">                src: &quot;</span><span class="number">12</span>.jpg<span class="string">&quot;</span></span><br><span class="line"><span class="string">            &#125;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        /* 1.一排能放置几张图片 */</span></span><br><span class="line"><span class="string">        window.onload = function () &#123;</span></span><br><span class="line"><span class="string">            place_img();</span></span><br><span class="line"><span class="string">            $(window).scroll(function()&#123;</span></span><br><span class="line"><span class="string">                if(onReachBottom())&#123;</span></span><br><span class="line"><span class="string">                    url.dataUrl.forEach(item=&gt;&#123;</span></span><br><span class="line"><span class="string">                        let list = `&lt;div class=&quot;</span>item<span class="string">&quot;&gt;&lt;img  src=&quot;</span>images/$&#123;item.src&#125;&quot;/&gt;&lt;/<span class="selector-tag">div</span>&gt;`</span><br><span class="line">                        $(&quot;<span class="selector-class">.content</span>&quot;)<span class="selector-class">.append</span>(list);</span><br><span class="line">                        place_img()</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        function place_img() &#123;</span><br><span class="line">            <span class="selector-tag">var</span> ww = $(window)<span class="selector-class">.width</span>()</span><br><span class="line">            <span class="selector-tag">var</span> itemWidth = $(&quot;<span class="selector-class">.item</span>&quot;)<span class="selector-class">.outerWidth</span>();</span><br><span class="line">            <span class="selector-tag">var</span> num = Math<span class="selector-class">.floor</span>(ww / itemWidth);</span><br><span class="line">            <span class="comment">/* 2.将第一排的高度放置在一个数组中 */</span></span><br><span class="line">            <span class="selector-tag">var</span> arrHeight = <span class="selector-attr">[]</span></span><br><span class="line">            $(&quot;<span class="selector-class">.item</span>&quot;)<span class="selector-class">.each</span>((index, item) =&gt; &#123;</span><br><span class="line">                if (index &lt; num) &#123;</span><br><span class="line">                    <span class="selector-tag">var</span> itemHeight = $(item)<span class="selector-class">.outerHeight</span>();</span><br><span class="line">                    arrHeight<span class="selector-class">.push</span>(itemHeight)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    <span class="comment">/* 3.从高度最小的地方开发放置图片 */</span></span><br><span class="line">                    <span class="selector-tag">var</span> minHeight = Math<span class="selector-class">.min</span>(..<span class="selector-class">.arrHeight</span>);</span><br><span class="line">                    <span class="selector-tag">var</span> minIndex = arrHeight<span class="selector-class">.indexOf</span>(minHeight);</span><br><span class="line">                    <span class="selector-tag">var</span> offsetLeft = $(&quot;<span class="selector-class">.item</span>&quot;)<span class="selector-class">.eq</span>(minIndex)<span class="selector-class">.offset</span>()<span class="selector-class">.left</span>;</span><br><span class="line">                    $(&quot;<span class="selector-class">.item</span>&quot;)<span class="selector-class">.eq</span>(index)<span class="selector-class">.css</span>(&#123; <span class="attribute">position</span>: <span class="string">&#x27;absolute&#x27;</span>, top: minHeight, left: offsetLeft &#125;)</span><br><span class="line">                    <span class="comment">/* 4.重置数组中的最小高度 */</span></span><br><span class="line">                    arrHeight<span class="selector-attr">[minIndex]</span> = minHeight + $(&quot;<span class="selector-class">.item</span>&quot;)<span class="selector-class">.eq</span>(index)<span class="selector-class">.outerHeight</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br><span class="line"></span><br><span class="line">//封装JS</span><br><span class="line">function onReachBottom() &#123;</span><br><span class="line">    <span class="selector-tag">var</span> dh = $(document)<span class="selector-class">.height</span>();</span><br><span class="line">    <span class="selector-tag">var</span> sh = $(window)<span class="selector-class">.scrollTop</span>();</span><br><span class="line">    <span class="selector-tag">var</span> wh = $(window)<span class="selector-class">.height</span>();</span><br><span class="line">    return (Math<span class="selector-class">.ceil</span>(sh + wh) == dh) ? true : false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-3事件冒泡"><a href="#3-3事件冒泡" class="headerlink" title="3-3事件冒泡"></a>3-3事件冒泡</h2><h4 id="1-事件冒泡"><a href="#1-事件冒泡" class="headerlink" title="1.事件冒泡"></a>1.事件冒泡</h4><ul>
<li>起因：父元素和子元素绑定了相同的事件</li>
<li>结果：子元素的事件执行完后父元素的事件也会触发<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 阻止事件冒泡(子元素父元素事件都要调用) */</span></span><br><span class="line">event.stopPropagation()</span><br></pre></td></tr></table></figure>
<h4 id="2-事件捕获"><a href="#2-事件捕获" class="headerlink" title="2.事件捕获"></a>2.事件捕获</h4></li>
<li>从不太具体的节点 最早接收事件，而最具体的节点 最后接收事件<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">addEventListener(<span class="string">&#x27;event&#x27;</span>,<span class="function"><span class="keyword">function</span>,<span class="title">boolean</span>)</span></span><br><span class="line"><span class="function">	-<span class="title">boolean</span>取值决定事件</span></span><br><span class="line"><span class="function">  	-<span class="title">true</span> 事件捕获</span></span><br><span class="line"><span class="function">  	-<span class="title">false</span> 事件冒泡</span></span><br></pre></td></tr></table></figure>
<h2 id="3-4异常处理"><a href="#3-4异常处理" class="headerlink" title="3-4异常处理"></a>3-4异常处理</h2><h4 id="try-catch"><a href="#try-catch" class="headerlink" title="try-catch"></a>try-catch</h4></li>
<li>try-catch-throw<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//try中的语句错误,将会执行catch中的语句</span></span><br><span class="line">     alertt(<span class="string">&quot;good&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">     alert(<span class="string">&quot;hello&quot;</span>)；</span><br><span class="line">     <span class="comment">//err.message输出错误的信息</span></span><br><span class="line">     <span class="comment">//alert(err.message)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>()&#123;</span><br><span class="line">        <span class="comment">/* throw可以自定义错误并传给err */</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&quot;输入的值不能为空&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    alert(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript</title>
    <url>/2021/07/30/JavaScript---%E5%87%BD%E6%95%B0%E5%92%8C%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="4-1函数"><a href="#4-1函数" class="headerlink" title="4-1函数"></a>4-1函数</h2><h4 id="1-赋值"><a href="#1-赋值" class="headerlink" title="1.赋值"></a>1.赋值</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">/* es6 如果对象的属性名和值相同就可以简写 */</span></span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">&quot;cheng&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">        name,   <span class="comment">//name:name</span></span><br><span class="line">        age,		<span class="comment">//age:age</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(obj)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id="2-默认赋值"><a href="#2-默认赋值" class="headerlink" title="2.默认赋值"></a>2.默认赋值</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params">type=<span class="string">&quot;get&quot;</span></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(type)</span><br><span class="line">&#125;</span><br><span class="line">go()        <span class="comment">//get</span></span><br><span class="line">go(<span class="string">&quot;post&quot;</span>)  <span class="comment">//post</span></span><br></pre></td></tr></table></figure>
<h4 id="3-有关函数的问题"><a href="#3-有关函数的问题" class="headerlink" title="3.有关函数的问题"></a>3.有关函数的问题</h4><ul>
<li>返回值 js不需要返回值，但是使用了return语句，后面的代码将不运行</li>
<li>函数传不定参的情况：多余的参数会被arguments对象接收。显示一个类数组对象</li>
<li>函数重载<ul>
<li>js不支持重载，若要实现重载，见下<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">arguments</span>.length == <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]+<span class="built_in">arguments</span>[<span class="number">1</span>])</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">arguments</span>.length == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show(<span class="number">10</span>)</span><br><span class="line">show(<span class="number">10</span>,<span class="number">20</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>块级作用域</li>
<li>{ }<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">/* 块级作用域 </span></span><br><span class="line"><span class="comment">    es6之前没有块级作用域</span></span><br><span class="line"><span class="comment">    */</span>    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">let</span> a = <span class="number">20</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(i)  <span class="comment">//4</span></span><br><span class="line">    <span class="built_in">console</span>.log(a) <span class="comment">//报错</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id="2-箭头函数"><a href="#2-箭头函数" class="headerlink" title="2.箭头函数"></a>2.箭头函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(x)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="function"><span class="params">x</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(x)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="function">(<span class="params">x,y</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(x)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
<li>箭头函数<ul>
<li>参数只有一个可以不用小括号，输出语句只有一行可以不用大括号<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> go = <span class="function"><span class="params">x</span>=&gt;</span>x;</span><br><span class="line"><span class="keyword">var</span> test = <span class="function"><span class="params">z</span>=&gt;</span><span class="built_in">console</span>.log(z);</span><br><span class="line"><span class="keyword">var</span> getInfo=<span class="function">(<span class="params">x,y</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x)</span><br><span class="line">    <span class="built_in">console</span>.log(x+y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-2this指向函数"><a href="#4-2this指向函数" class="headerlink" title="4-2this指向函数"></a>4-2this指向函数</h2><h4 id="1-箭头函数与this的关系"><a href="#1-箭头函数与this的关系" class="headerlink" title="1.箭头函数与this的关系"></a>1.箭头函数与this的关系</h4></li>
</ul>
</li>
<li>解决了函数内部this关键字的指向问题。当函数直接调用时，this指向window<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">test.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>)  <span class="comment">//div&#123;&#125;</span></span><br><span class="line">    go()   </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>)  <span class="comment">//window&#123;&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-有关方法的用法及语法"><a href="#2-有关方法的用法及语法" class="headerlink" title="2.有关方法的用法及语法"></a>2.有关方法的用法及语法</h4></li>
<li>bind( ) 改变了函数执行的上下文环境</li>
<li>call( ) 改变函数this的指向，函数调用的时候执行</li>
<li>apply( ) 改变函数this的指向，函数调用的时候执行<br>bind改变函数上下文执行环境,不会马上执行，被apply,call绑定的函数会马上执行</li>
</ul>
<p>键值语法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* es5语法 */</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;html&quot;</span>,</span><br><span class="line">    <span class="attr">sayName</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">/* es6语法 */</span> </span><br><span class="line"><span class="keyword">var</span> skill = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;javascript&quot;</span>,</span><br><span class="line">    <span class="function"><span class="title">saySkill</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>bind，call ，apply方法的调用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- 调用实例一 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">var</span> li = <span class="string">&quot;li&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">var</span> obj = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span> : <span class="string">&quot;cheng&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.name)  <span class="comment">//cheng</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">test.call(obj) </span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;!-- 调用实例一 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params">name,age</span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name+<span class="string">&quot;:&quot;</span>+<span class="built_in">this</span>.age)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(name)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(age)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;    </span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> li = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">name</span>:<span class="string">&quot;李梦瑶&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">age</span>:<span class="number">23</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> zhang = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">name</span>:<span class="string">&quot;张三丰&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">age</span>:<span class="number">100</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    go.apply(li,[<span class="string">&quot;li&quot;</span>,<span class="number">24</span>])</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    go.call(zhang,<span class="string">&quot;zhang&quot;</span>,<span class="number">111</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结果 */</span></span><br><span class="line">李梦瑶:<span class="number">23</span></span><br><span class="line">li</span><br><span class="line"><span class="number">24</span></span><br><span class="line">张三丰:<span class="number">100</span></span><br><span class="line">zhang</span><br><span class="line"><span class="number">111</span></span><br></pre></td></tr></table></figure>
<h2 id="4-3回调函数"><a href="#4-3回调函数" class="headerlink" title="4-3回调函数"></a>4-3回调函数</h2><p><strong>回调函数</strong><br>就是将函数作为参数传递给另外一个函数函数执行完后再执行回调的函数 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">http</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> data = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;cheng&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;;</span><br><span class="line">        callback(data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">handleData</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;</span><br><span class="line">    http(handleData);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="4-4操作数组"><a href="#4-4操作数组" class="headerlink" title="4-4操作数组"></a>4-4操作数组</h2><h4 id="1-创建数组的两种方法"><a href="#1-创建数组的两种方法" class="headerlink" title="1.创建数组的两种方法"></a>1.创建数组的两种方法</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<h4 id="2-数组的遍历"><a href="#2-数组的遍历" class="headerlink" title="2.数组的遍历"></a>2.数组的遍历</h4><ul>
<li>for in遍历(可以对对象进行遍历)<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> arr)&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(arr[key])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li> forEach 遍历</li>
<li> for of 遍历</li>
<li> map 遍历（下面介绍）</li>
<li> some 所有数据满足一个条件，返回true</li>
<li> every 所有数据满足条件，返回true<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">/* forEach */</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;css&#x27;</span>,<span class="string">&#x27;vue&#x27;</span>];</span><br><span class="line">arr.forEach(<span class="function">(<span class="params">item,index</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line"><span class="built_in">console</span>.log(index)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* of */</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> value <span class="keyword">of</span> arr)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value)</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* map */</span>   </span><br><span class="line"><span class="keyword">var</span> newArray = arr.map(<span class="function">(<span class="params">item,index</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item+<span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newArray)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure>
<h4 id="3-遍历键值对变量"><a href="#3-遍历键值对变量" class="headerlink" title="3.遍历键值对变量"></a>3.遍历键值对变量</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> data = &#123;<span class="attr">name</span>:<span class="string">&quot;wujianxiong&quot;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">sex</span>:<span class="string">&quot;男&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> data)&#123;</span><br><span class="line">        <span class="keyword">var</span> p = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>);</span><br><span class="line">        p.innerHTML = data[key];</span><br><span class="line">        <span class="built_in">document</span>.body.append(p)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">​<span class="string">``</span><span class="string">`javascript</span></span><br><span class="line"><span class="string">#### 4.数组排序</span></span><br><span class="line"><span class="string">- reserve 倒序</span></span><br><span class="line"><span class="string">- sort 根据函数冒泡排序</span></span><br><span class="line"><span class="string">- reduce 根据匿名函数进行累加／累减</span></span><br><span class="line"><span class="string">#### 5.数组的增加</span></span><br><span class="line"><span class="string">- push( )  从数组的末尾增加一个值，可一次性增加多个</span></span><br><span class="line"><span class="string">- unshift 从数组的开头增加</span></span><br><span class="line"><span class="string">- concat( )  拼接两个数组,但是不能改变原数组的结构</span></span><br><span class="line"><span class="string">- ...  展开</span></span><br><span class="line"><span class="string">- filter( ) 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素</span></span><br><span class="line"><span class="string">- join(&quot;/&quot;) 参数是分隔符</span></span><br><span class="line"><span class="string">​`</span><span class="string">``</span>javascript</span><br><span class="line"><span class="comment">/* push() */</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">    arr.push(<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(arr)  <span class="comment">//Array[5] &#123;1，2，3，4，5&#125;</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* concat() */</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> obj = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> newArray = arr.concat(obj)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">console</span>.log(newArray)  <span class="comment">//Array[6] &#123;1,2,3,4,5,6&#125;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> obj = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">console</span>.log(...arr)    <span class="comment">//1 2 3</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    arr.push(...obj)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">console</span>.log(arr)	<span class="comment">//Array[6] &#123;1,2,3,4,5,6&#125;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
<li>定点增加<br>splice(index,0,parmas)<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">/* splice(index,0,parmas) 从index的前面增加*/</span></span><br><span class="line">  <span class="keyword">var</span> skills = [<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;css&#x27;</span>,<span class="string">&#x27;jq&#x27;</span>,<span class="string">&#x27;js&#x27;</span>]</span><br><span class="line">  <span class="comment">/* splice */</span></span><br><span class="line">  skills.splice(<span class="number">2</span>,<span class="number">0</span>,<span class="string">&#x27;vue&#x27;</span>)</span><br><span class="line">  <span class="built_in">console</span>.log(skills)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id="5-删除"><a href="#5-删除" class="headerlink" title="5.删除"></a>5.删除</h4></li>
<li>pop( ) 从后面删除</li>
<li>shift( ) 从前面删除</li>
<li>arrayObject.splice(index,howmany,item1,…..,itemX)<h4 id="6-查询"><a href="#6-查询" class="headerlink" title="6.查询"></a>6.查询</h4></li>
<li>indexOf(element) 查询元素下标的方法</li>
<li>slice(start,end) 从start下标处查询到end-1处</li>
<li>includes( ) 判断数组是否包含某个值</li>
<li>Math.max(…arr) 查询最大值</li>
<li>Math.min(…arr) 查询最小值</li>
<li>find(item=&gt;item==2) 返回第一个满足条件的值</li>
<li>findIndex(item=&gt;item.id==123)返回满足条件的下标</li>
<li>filter(item=&gt;item.id==123)返回满足条件的对象</li>
<li>map(item=&gt;item.id==123)返回新数组，但是不能改变数组结构 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(songs[i].name.length&gt;<span class="number">5</span>)&#123;</span><br><span class="line">  obj.name = songs[i].name.slice(<span class="number">0</span>, <span class="number">5</span>)+<span class="string">&quot;...&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  obj.name = songs[i].name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="filter-every介绍"><a href="#filter-every介绍" class="headerlink" title="filter\every介绍"></a>filter\every介绍</h3></li>
<li>filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</li>
<li>every() 方法用于检测数组所有元素是否都符合指定条件（通过函数提供）。<br>every() 方法使用指定函数检测数组中的所有元素：</li>
<li>如果数组中检测到有一个元素不满足，则整个表达式返回 false ，且剩余的元素不会再进行检测。</li>
<li>如果所有元素都满足条件，则返回 true。</li>
</ul>
<p><strong>注意</strong>： every() 不会对空数组进行检测。<br><strong>注意</strong>： every() 不会改变原始数组。</p>
<img src="https://cdn.nlark.com/yuque/0/2019/png/402742/1573888111278-9f33b7c5-72f0-4ad8-97e8-8fc2ccd18519.png" alt="img" style="zoom: 80%;" />]]></content>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript</title>
    <url>/2021/07/30/JavaScript---%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h2 id="1-1数据类型"><a href="#1-1数据类型" class="headerlink" title="1-1数据类型"></a>1-1数据类型</h2><h4 id="5种基本类型"><a href="#5种基本类型" class="headerlink" title="5种基本类型"></a>5种基本类型</h4><p>number<br>String<br>boolean<br>undefined<br>null</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">特例：</span><br><span class="line"><span class="comment">/* undefined</span></span><br><span class="line"><span class="comment">  如果声明一个变量没有赋值的情况下，就会输出undefined</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">console</span>.log(a)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* null</span></span><br><span class="line"><span class="comment">   null就是空，不占内存空间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 声明提前，变量提升 (仅存在ES5中)</span></span><br><span class="line"><span class="comment">    js在执行代码的时候会将所有使用var声明的变量，放在作用域</span></span><br><span class="line"><span class="comment">    的顶部集中创建，赋值留在原地</span></span><br><span class="line"><span class="comment">    var a;</span></span><br><span class="line"><span class="comment">    console.log(a);</span></span><br><span class="line"><span class="comment">    a =20;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="built_in">console</span>.log(a) <span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(b) <span class="comment">//报错</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">20</span>;	</span><br><span class="line"><span class="keyword">let</span> b = <span class="number">30</span>;</span><br></pre></td></tr></table></figure>
<h4 id="数据类型的转换"><a href="#数据类型的转换" class="headerlink" title="数据类型的转换"></a>数据类型的转换</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*转换成number型*/</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;12&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="string">&quot;12.22px&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> num = <span class="built_in">Number</span>(a); <span class="comment">//12</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="built_in">Number</span>(b); <span class="comment">//1</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="built_in">Number</span>(c); <span class="comment">//isNaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(c)) <span class="comment">//12</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(c))	<span class="comment">//12.22</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*转换成String型*/</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>];</span><br><span class="line"><span class="keyword">var</span> t = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> arr);  <span class="comment">//object,无法判断数组。</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">String</span>(a));   <span class="comment">//方法一</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> t.toString());		<span class="comment">//方法二</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*转换成boolean型*/</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;tr&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> d = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> e = <span class="literal">NaN</span>;</span><br><span class="line"><span class="keyword">var</span> f = <span class="literal">undefined</span>;</span><br><span class="line"><span class="built_in">Boolean</span>(a); <span class="comment">//true</span></span><br><span class="line"><span class="built_in">Boolean</span>(b); <span class="comment">//false</span></span><br><span class="line"><span class="built_in">Boolean</span>(c); <span class="comment">//false</span></span><br><span class="line"><span class="built_in">Boolean</span>(d); <span class="comment">//false</span></span><br><span class="line"><span class="built_in">Boolean</span>(e); <span class="comment">//false</span></span><br><span class="line"><span class="built_in">Boolean</span>(f); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 自动转换 隐式转换 </span></span><br><span class="line"><span class="comment">   不需要程序员干预，js自动完成的类型转换</span></span><br><span class="line"><span class="comment">   场景:主要在算术计算中 + - * / %</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/* 1.在加运算中的自动转换 </span></span><br><span class="line"><span class="comment">算术计算中，先将两边的变量转换为Number再计算</span></span><br><span class="line"><span class="comment">特殊：只要有一边在加运算中碰到字符串，+就作为拼接符的作用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="string">&quot;hello&quot;</span> ;</span><br><span class="line"><span class="keyword">var</span> str = a+b;</span><br><span class="line"><span class="keyword">var</span> sum = a+c;</span><br><span class="line"><span class="built_in">console</span>.log(str)    <span class="comment">//2</span></span><br><span class="line"><span class="built_in">console</span>.log(sum)    <span class="comment">//1hello</span></span><br><span class="line"><span class="built_in">console</span>.log(b+c)    <span class="comment">//truehello</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a-(b+<span class="string">&quot;2&quot;</span>)); <span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">20</span>-b+<span class="string">&quot;false&quot;</span>) <span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">20</span>-b+<span class="built_in">Number</span>(<span class="string">&quot;12.34&quot;</span>)); <span class="comment">//31.34</span></span><br></pre></td></tr></table></figure>
<h2 id="1-2算术运算符"><a href="#1-2算术运算符" class="headerlink" title="1-2算术运算符"></a>1-2算术运算符</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">	&gt; &lt; &lt;= &gt;= 比较运算的结果是TURE FLASE</span></span><br><span class="line"><span class="comment">	先将两边的值转换为Number再比较</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="string">&quot;20&quot;</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(a&gt;b)  <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(a&gt;c)  <span class="comment">//false  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 比较运算</span></span><br><span class="line"><span class="comment">&lt; &gt; &lt;= &gt;=  == != */</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a=b);   <span class="comment">//20</span></span><br><span class="line"><span class="built_in">console</span>.log(a==b);  <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(a!=b);  <span class="comment">//true</span></span><br><span class="line"><span class="comment">/* NaN与任何值做！= 比较时，结果为True */</span></span><br><span class="line"><span class="built_in">console</span>.log(a!=<span class="string">&quot;true&quot;</span>)  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*isNaN()方法判断是否为NaN*/</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(a));  <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算*/</span></span><br><span class="line"><span class="keyword">var</span> c = (a&gt;b)?<span class="string">&quot;a大于b&quot;</span>:<span class="string">&quot;a小于b&quot;</span> <span class="comment">//（条件）？Y:N;</span></span><br><span class="line"><span class="built_in">console</span>.log(c)</span><br></pre></td></tr></table></figure>
<h5 id="三木运算符（vue）"><a href="#三木运算符（vue）" class="headerlink" title="三木运算符（vue）"></a>三木运算符（vue）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;img @click=&quot;handleClick&quot; :src=&quot;isPlay?&#x27;images/hh.png&#x27;:&#x27;images/zs.png&#x27;&quot; alt=&quot;&quot;&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123;isPlay&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el:&quot;#app&quot;,</span><br><span class="line">        data()&#123;</span><br><span class="line">            return&#123;</span><br><span class="line">                isPlay:false</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            handleClick()&#123;</span><br><span class="line">                this.isPlay = !this.isPlay</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="1-3-循环"><a href="#1-3-循环" class="headerlink" title="1-3 循环"></a>1-3 循环</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//whlle循环</span></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//switch case break continue循环</span></span><br><span class="line"><span class="keyword">switch</span>(variety)&#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;等于1&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;等于2&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;等于3&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;其他值&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="死循环实例"><a href="#死循环实例" class="headerlink" title="死循环实例"></a>死循环实例</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="built_in">window</span>.confirm(<span class="string">&quot;我帅吗&quot;</span>);</span><br><span class="line">  a+=<span class="number">10</span>;</span><br><span class="line">  <span class="keyword">while</span>(a)&#123;</span><br><span class="line">      alert(<span class="string">&quot;请说我很帅一百遍&quot;</span>); <span class="comment">//死循环</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*continue 和 break*/</span></span><br><span class="line"><span class="keyword">continue</span>是跳出本次循环</span><br><span class="line"><span class="keyword">break</span>是结束循环</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">/* break 中断跳出循环 */</span>  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">4</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;***********&quot;</span>)</span><br><span class="line">    <span class="comment">/* continue 跳出当前循环 */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;=<span class="number">5</span>;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">4</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(j)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript</title>
    <url>/2021/07/30/JavaScript---%E6%96%B9%E6%B3%95%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h3 id="1-小数化整"><a href="#1-小数化整" class="headerlink" title="1.小数化整"></a>1.小数化整</h3><p>Math.ceil( ) 上取整<br>​        Math.floor( ) 下取整<br>​        Math.round( ) 四舍五入取整</p>
<ul>
<li>1-1保留一位小数<ul>
<li>num.toFixed(1)<h3 id="2-重置下标"><a href="#2-重置下标" class="headerlink" title="2.重置下标"></a>2.重置下标</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//javascript</span></span><br><span class="line"><span class="keyword">var</span> index = <span class="built_in">this</span>.index;</span><br><span class="line"><span class="comment">//jquery</span></span><br><span class="line"><span class="keyword">var</span> index = $(<span class="built_in">this</span>).index();</span><br></pre></td></tr></table></figure>
<h3 id="3-更改CSS里的属性"><a href="#3-更改CSS里的属性" class="headerlink" title="3.更改CSS里的属性"></a>3.更改CSS里的属性</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> move = <span class="built_in">document</span>.getElementById(<span class="string">&quot;move&quot;</span>);</span><br><span class="line">move.style.cssText = <span class="string">`left:<span class="subst">$&#123;left&#125;</span>px;top:<span class="subst">$&#123;top&#125;</span>px`</span>;</span><br></pre></td></tr></table></figure>
<h3 id="4-给标签填充文字"><a href="#4-给标签填充文字" class="headerlink" title="4.给标签填充文字"></a>4.给标签填充文字</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 如果有引号用转义符\ */</span></span><br><span class="line">p.innerHTML = <span class="string">&quot;搜索\&quot;&quot;</span>+v.value+<span class="string">&quot;\&quot;,找到600首单曲&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="5-JS装换时分秒"><a href="#5-JS装换时分秒" class="headerlink" title="5.JS装换时分秒"></a>5.JS装换时分秒</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">如果你红框内返回的是毫秒数，你就要先转换为date类型 比如红框内是X ;</span><br><span class="line">(注:这里的毫秒数是由具体年月日转换来的，但接口里就是根据时间转换过来的，可以直接用)</span><br><span class="line">(不能用年月日的时间差去转换)</span><br><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>(X);</span><br><span class="line"><span class="keyword">var</span> year = now.getFullYear(); <span class="comment">//获取年份</span></span><br><span class="line"><span class="keyword">var</span> month = now.getMonth(); <span class="comment">//获取月份 月份要+1</span></span><br><span class="line"><span class="keyword">var</span> date = now.getDate(); <span class="comment">//获取日期</span></span><br><span class="line"><span class="keyword">var</span> hour = now.getHours(); <span class="comment">//获取时</span></span><br><span class="line"><span class="keyword">var</span> minu = now.getMinutes(); <span class="comment">//获取分钟</span></span><br><span class="line"><span class="keyword">var</span> sec = now.getSeconds(); <span class="comment">//获取秒钟</span></span><br><span class="line">这些都是原生的js方法</span><br></pre></td></tr></table></figure>
<h3 id="6-JS封装入口（窗口加载完成）"><a href="#6-JS封装入口（窗口加载完成）" class="headerlink" title="6.JS封装入口（窗口加载完成）"></a>6.JS封装入口（窗口加载完成）</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="built_in">window</span>.onload(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)</span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="7-遍历接口中多个相同属性"><a href="#7-遍历接口中多个相同属性" class="headerlink" title="7.遍历接口中多个相同属性"></a>7.遍历接口中多个相同属性</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = [];</span><br><span class="line"><span class="keyword">var</span> castnames = [];</span><br><span class="line">writers.forEach(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">  names.push(item.name)</span><br><span class="line">&#125;);  </span><br><span class="line">obj.writers = names.join(<span class="string">&quot;/&quot;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="8-关于冒号"><a href="#8-关于冒号" class="headerlink" title="8.关于冒号 :"></a>8.关于冒号 :</h3>$(“:button”) 表示匹配所有的按钮。<br>$(“input:checked”)表示匹配所有选中的被选中元素(复选框、单选框等，不包括select中的option)。 </li>
</ul>
</li>
</ul>
<h3 id="9-is"><a href="#9-is" class="headerlink" title="9.is()"></a>9.is()</h3><ul>
<li>$(selector).is(selectorElement,function(index,element))<ul>
<li>选择器表达式，根据选择器/元素/jQuery 对象检查匹配元素集合，如果存在至少一个匹配元素，则返回 true，否则返回 false.</li>
<li>function()可选项<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($(<span class="string">&quot;p&quot;</span>).parent().is(<span class="string">&quot;div&quot;</span>)) &#123;</span><br><span class="line">    alert(<span class="string">&quot;p 的父元素是 div&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">判断动画播放完</span><br><span class="line"><span class="keyword">if</span>(!$(<span class="string">&quot;.pic&gt;img&quot;</span>).is(<span class="string">&quot;:animated&quot;</span>))</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// -----------生命周期--------</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 可以获取dom元素，但无法获取宽高等属性（window.onload可以获取）</span></span><br><span class="line"><span class="comment">* 可以依次执行多个ready函数（但window.onload只执行一次）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; &#125;) </span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行函数（等同于上面的ready函数）</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ------------获取dom-----------</span></span><br><span class="line"><span class="keyword">var</span> $dom = $(<span class="string">&quot;p&quot;</span>);  <span class="comment">//这里是jq对象的dom，如果$(&quot;p&quot;)[0],这是原生dom，下同。</span></span><br><span class="line"><span class="keyword">var</span> $dom_class = $(<span class="string">&quot;.box&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> $dom_id = $(<span class="string">&quot;#box&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ------------修改CSS-----------</span></span><br><span class="line">$dom.css(&#123;</span><br><span class="line">  <span class="attr">background</span>: <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ------------获取宽高-----------</span></span><br><span class="line">$dom.width()</span><br><span class="line"></span><br><span class="line"><span class="comment">// ------------创建DOM------------</span></span><br><span class="line"><span class="keyword">var</span> $p = $(<span class="string">&quot;&lt;p&gt;hello&lt;/p&gt;&quot;</span>);</span><br><span class="line">$dom.append($p)</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------遍历伪数组----------</span></span><br><span class="line"><span class="keyword">var</span> warr = &#123;<span class="number">0</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;r&#x27;</span>, <span class="attr">length</span>: <span class="number">2</span>&#125;;</span><br><span class="line">$.each(warr, <span class="function"><span class="keyword">function</span>(<span class="params">index, item</span>)</span>&#123; &#125;); <span class="comment">// $.each也可以遍历数组，返回值是原对象</span></span><br><span class="line">$.map(warr, <span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>)</span>&#123; <span class="keyword">return</span> item &#125;); <span class="comment">// $.map也可以遍历数组,</span></span><br><span class="line">	返回值是<span class="keyword">return</span>处理的数组</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB---单机部署</title>
    <url>/2021/08/02/MongoDB--%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="Windows系统中的安装启动"><a href="#Windows系统中的安装启动" class="headerlink" title="Windows系统中的安装启动"></a>Windows系统中的安装启动</h2><h5 id="第一步：下载安装包"><a href="#第一步：下载安装包" class="headerlink" title="第一步：下载安装包"></a>第一步：下载安装包</h5><p><a href="https://www.mongodb.com/try/download/community">https://www.mongodb.com/try/download/community</a><br><img src="D:\hexo\dimples\source_posts\mongodb.png" alt="mongodb"></p>
<p>根据上图所示下载<code>zip</code>包<br>提示：版本的选择：<br>MongoDB的版本命名规范如：ｘ．ｙ．ｚ<br>ｙ为奇数时表示当前版本为开发版<br>ｙ为偶数时表示当前版本为稳定版<br>ｚ是修正版本号，数字越大越好</p>
<h5 id="第二步：解压安装启动"><a href="#第二步：解压安装启动" class="headerlink" title="第二步：解压安装启动"></a>第二步：解压安装启动</h5><p>将压缩包解压大一个目录中。<br>在解压目录中，手动建立一个目录用于存放数据文件，如data/db</p>
<p>方式1：命令行参数方式启动服务<br>在bin目录中打开命令提示符，输入如下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongod --dbpath=..\data\db</span><br></pre></td></tr></table></figure>
<p><img src="D:\hexo\dimples\source_posts\conf.png" alt="conf"><br>mongoDB的默认端口是27017</p>
<p>方式2：配置文件方式启动服务<br>在解压目录中新建<code>config</code>文件夹，该文件夹中新建配置文件<code>mongod.conf</code>，内如参考如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">storage:</span></span><br><span class="line">	<span class="comment">#The directory where the mongod instance stores its data.Default Value is &quot;data\db&quot; on windows</span></span><br><span class="line">	<span class="attr">dbPath:</span> <span class="string">D:\MongoDB\data</span></span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongod -f ../config/mongod.conf</span><br><span class="line">或</span><br><span class="line">mongod --config ../config/mongod.conf</span><br></pre></td></tr></table></figure>

<h2 id="Shell链接（mongo命令）"><a href="#Shell链接（mongo命令）" class="headerlink" title="Shell链接（mongo命令）"></a>Shell链接（mongo命令）</h2><p>在命令提示符输入以下shell命令即可完成登录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure>
<p>查看已经有的数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">show databases</span><br></pre></td></tr></table></figure>
<p>退出mongodb</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>
<p>更多参数可以通过帮助查看：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongo --help</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascrip</title>
    <url>/2021/07/30/JavaScript---%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h2 id="2-1Dom树"><a href="#2-1Dom树" class="headerlink" title="2-1Dom树"></a>2-1Dom树</h2><h4 id="Dom-document-object-model-文档对象模型"><a href="#Dom-document-object-model-文档对象模型" class="headerlink" title="Dom (document object model)文档对象模型"></a>Dom (document object model)文档对象模型</h4><p>Dom树 :增删改查元素的标准,可以动态的修改元素的内容，样式，结构</p>
<ul>
<li>Dom树是由一个个节点构成</li>
<li>节点的关系：父子关系，兄弟关系<h5 id="1-如何获取一个Dom-html元素"><a href="#1-如何获取一个Dom-html元素" class="headerlink" title="1. 如何获取一个Dom (html元素)"></a>1. 如何获取一个Dom (html元素)</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p id=<span class="string">&quot;test&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">       </span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">var</span> test = <span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>       </span><br></pre></td></tr></table></figure>
<h5 id="2-给节点增加一个class"><a href="#2-给节点增加一个class" class="headerlink" title="2.给节点增加一个class"></a>2.给节点增加一个class</h5></li>
<li>object.className = “classname”<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> test = <span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">test.className = <span class="string">&quot;current&quot;</span></span><br></pre></td></tr></table></figure>
<h5 id="2-给节点增加一个class-1"><a href="#2-给节点增加一个class-1" class="headerlink" title="2.给节点增加一个class"></a>2.给节点增加一个class</h5></li>
<li>object.className = “classname”<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> test = <span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">test.className = <span class="string">&quot;current&quot;</span></span><br></pre></td></tr></table></figure>
<h5 id="3-判断一个元素是否有某Class"><a href="#3-判断一个元素是否有某Class" class="headerlink" title="3.判断一个元素是否有某Class"></a>3.判断一个元素是否有某Class</h5></li>
<li>object.classList.contains(“classname”)<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.classList.contains(<span class="string">&quot;one&quot;</span>))&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="4-节点查询元素属性"><a href="#4-节点查询元素属性" class="headerlink" title="4.节点查询元素属性"></a>4.节点查询元素属性</h5></li>
<li>元素节点=1</li>
<li>属性节点=2</li>
<li>文本节点=3<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//firstChild 输出第一个节点</span></span><br><span class="line"><span class="comment">//firstElementChild 输出第一个元素节点</span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;parent&quot;</span>&gt;</span>wujx<span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="keyword">var</span> parent = <span class="built_in">document</span>.getElementById(<span class="string">&quot;parent&quot;</span>); </span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="keyword">var</span> tNode = parent.firstChild;         <span class="comment">//文本节点</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="keyword">var</span> aNode = parent.getAttributeNode(<span class="string">&quot;id&quot;</span>);  <span class="comment">//属性节点</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="built_in">console</span>.log(parent.firstElementChild)  <span class="comment">//&lt;p&gt;hello world&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="built_in">console</span>.log(parent.firstChild)			<span class="comment">//&quot;wujx&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="built_in">console</span>.log(parent.nodeType)			<span class="comment">//1</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="built_in">console</span>.log(tNode.nodeType)			<span class="comment">//3</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="built_in">console</span>.log(aNode.nodeType)			<span class="comment">//2</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h5 id="5-自定义属性"><a href="#5-自定义属性" class="headerlink" title="5.自定义属性"></a>5.自定义属性</h5></li>
<li>data-*<ul>
<li>这个属性是html5新加的特性，为了绑定数据，我们可以将一些参数绑定到dom标签上，而不用将数据填 到input标签上然后隐藏该标签。最需要注意的一点的取值时必需全部使用小写的名字，”data-*”中名字可以用驼峰命名。<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;test&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;one&quot;</span> data-uid=<span class="string">&quot;two&quot;</span>&gt;hello world&lt;/div&gt;  </span><br></pre></td></tr></table></figure>
<h5 id="6-增删改查"><a href="#6-增删改查" class="headerlink" title="6.增删改查"></a>6.增删改查</h5></li>
</ul>
</li>
<li>增：appendChild()</li>
<li>删：removeChild()</li>
<li>改：replaceChild(newChild,oldChild)</li>
<li>查：<ul>
<li>id :获取后直接查询</li>
<li> class :获取后直接查询的是HTML collection,通过下标查询该元素所有属性<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*增*/</span></span><br><span class="line"><span class="keyword">var</span> parent = <span class="built_in">document</span>.getElementById(<span class="string">&quot;parent&quot;</span>)；</span><br><span class="line"><span class="keyword">var</span> p = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>);</span><br><span class="line"><span class="comment">//内容增加方法一 innerHTML</span></span><br><span class="line">  p.innerHTML = <span class="string">&quot;hello world&quot;</span></span><br><span class="line">  parent.appendChild(p); <span class="comment">//在原有内容的后面增加新的元素</span></span><br><span class="line">  parent.insertBefore(p,parent.firstElementChild)<span class="comment">//在原有内容的前面增加新的元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//内容增加方法二 document.createTextNode(&quot;contents&quot;)</span></span><br><span class="line">  <span class="keyword">var</span> txt = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;第零个&quot;</span>);</span><br><span class="line">  p.appendChild(txt)</span><br><span class="line">  parent.insertBefore(p,parent.firstElementChild)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删*/</span></span><br><span class="line">	<span class="comment">//父类parent</span></span><br><span class="line">  <span class="comment">//子类good</span></span><br><span class="line">	<span class="keyword">var</span> parent = <span class="built_in">document</span>.getElementById(<span class="string">&quot;parent&quot;</span>)；		</span><br><span class="line">  parent.removeChild(good);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*改*/</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>good<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">var</span> parent = <span class="built_in">document</span>.getElementById(<span class="string">&quot;parent&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">var</span> p = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;p&quot;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">var</span> h2 = <span class="built_in">document</span>.createElement(<span class="string">&quot;h2&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  h2.innerHTML = <span class="string">&quot;标题&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  parent.replaceChild(h2,p);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查*/</span></span><br><span class="line"><span class="comment">//id       			getElementById()</span></span><br><span class="line"><span class="comment">//class    			getElementsByClassName()</span></span><br><span class="line"><span class="comment">//tagName  			getElementsByTagName()</span></span><br><span class="line"><span class="comment">//querySelector querySelectorAll() querySelector()</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> one = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;one&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(one)  							<span class="comment">//HTML collection</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(one[<span class="number">0</span>])  						<span class="comment">//元素属性</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray(one)) <span class="comment">//false 原因：class是集合中的一个对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">				<span class="built_in">console</span>.log(<span class="keyword">typeof</span> one)         <span class="comment">//object</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        one[<span class="number">0</span>].style.color = <span class="string">&quot;red&quot;</span>;     <span class="comment">//这里只能通过数组去改变</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h5 id="7-克隆节点"><a href="#7-克隆节点" class="headerlink" title="7.克隆节点"></a>7.克隆节点</h5></li>
</ul>
</li>
<li>cloneNode(true)<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;test&quot;</span>&gt;hello world&lt;/p&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> test = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;test&quot;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> cTest = test.cloneNode(<span class="literal">true</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">document</span>.body.appendChild(cTest)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h5 id="8-获取节点"><a href="#8-获取节点" class="headerlink" title="8.获取节点"></a>8.获取节点</h5></li>
<li>childNode  获取子节点， 不会区分文本，和元素节点</li>
<li>children 与上一个方法相同</li>
<li>nextSibling 获取下一个兄弟节点</li>
<li>nextElementSibling  获取下个兄弟元素节点<h5 id="9-获取定位偏移值"><a href="#9-获取定位偏移值" class="headerlink" title="9.获取定位偏移值"></a>9.获取定位偏移值</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">offsetParent 获取给了定位元素的父级 </span><br><span class="line">offsetLeft  返回元素的相对定位父元素水平偏移的位置。返回number</span><br><span class="line">offsetTop  返回元素的相对定位父元素水平垂直偏移的位置.</span><br></pre></td></tr></table></figure>
<h5 id="10-操作属性"><a href="#10-操作属性" class="headerlink" title="10.操作属性"></a>10.操作属性</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">setAttribute(<span class="string">&quot;attr&quot;</span>,<span class="string">&quot;value&quot;</span>)  <span class="comment">//设置属性</span></span><br><span class="line">getAttribute(<span class="string">&quot;attr&quot;</span>)  <span class="comment">//获取属性</span></span><br><span class="line">removeAttribute(<span class="string">&quot;attr&quot;</span>)  移除属性</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="2-2BOM"><a href="#2-2BOM" class="headerlink" title="2-2BOM"></a>2-2BOM</h2><h4 id="定义：BOM（browser-object-model）浏览器对象模型"><a href="#定义：BOM（browser-object-model）浏览器对象模型" class="headerlink" title="定义：BOM（browser object model）浏览器对象模型"></a>定义：BOM（browser object model）浏览器对象模型</h4><h5 id="1-window内置的Bom方法"><a href="#1-window内置的Bom方法" class="headerlink" title="1.window内置的Bom方法"></a>1.window内置的Bom方法</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">alert()    警告</span><br><span class="line">prompt()   提示</span><br><span class="line">confirm()  确认</span><br><span class="line">open(<span class="string">&#x27;url&#x27;</span>) 打开网页</span><br><span class="line"><span class="built_in">setTimeout</span>(func,time)</span><br><span class="line"><span class="comment">//  window.alert(1);</span></span><br><span class="line"><span class="comment">//  window.prompt(&quot;请输入你的年龄&quot;)</span></span><br><span class="line"><span class="comment">//  window.confirm(&quot;是否支付&quot;)</span></span><br></pre></td></tr></table></figure>
<h5 id="2-定时器"><a href="#2-定时器" class="headerlink" title="2.定时器"></a>2.定时器</h5><ul>
<li>设置超时定时器：setTimeout(func,time)</li>
<li>设置间隔定时器：setInterval(func,time)</li>
<li>清除定时器：clearInterval(variety)<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//超时调用，只执行一次</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">&#125;,<span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//间隔调用，反复执行，可应用递归思想调用函数</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;b&quot;</span>)</span><br><span class="line">&#125;,<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//清除定时器</span></span><br><span class="line"><span class="built_in">clearInterval</span>()</span><br></pre></td></tr></table></figure>
<h5 id="3-history"><a href="#3-history" class="headerlink" title="3.history"></a>3.history</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 历史页面记录回掉 */</span></span><br><span class="line">history.back()</span><br><span class="line"><span class="comment">/* 返回历史记录的前一个页面 */</span></span><br><span class="line">history.forward()</span><br></pre></td></tr></table></figure>
<h2 id="2-3增删class和元素"><a href="#2-3增删class和元素" class="headerlink" title="2-3增删class和元素"></a>2-3增删class和元素</h2><h5 id="1-classList"><a href="#1-classList" class="headerlink" title="1.classList"></a>1.classList</h5><h6 id="Javascript中"><a href="#Javascript中" class="headerlink" title="Javascript中:"></a>Javascript中:</h6></li>
<li>add( )  增加                        </li>
<li> remove( ) 移除</li>
<li> toggle( )  切换</li>
<li> contains( )  是否包含class<h6 id="Jquery中："><a href="#Jquery中：" class="headerlink" title="Jquery中："></a>Jquery中：</h6></li>
<li>addClass( )</li>
<li>removeClass( )</li>
<li>toggleClass( )</li>
<li>hasClass( )<h5 id="2-增加元素的方法"><a href="#2-增加元素的方法" class="headerlink" title="2.增加元素的方法"></a>2.增加元素的方法</h5></li>
<li>prepend( )  在父元素第一位增加元素</li>
<li>append( )   在父元素后面增加元素<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> parent = <span class="built_in">document</span>.getElementById(<span class="string">&quot;parent&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> h1 = <span class="built_in">document</span>.createElement(<span class="string">&quot;h1&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        h1.innerHTML = <span class="string">&#x27;head&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        parent.prepend(h1);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        parent.append(<span class="string">&quot;foot&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h6 id="Jquery实现"><a href="#Jquery实现" class="headerlink" title="Jquery实现"></a>Jquery实现</h6><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;body&quot;</span>).prepend(<span class="string">&quot;&lt;h1&gt;前面&lt;/h1&gt;&quot;</span>)    </span><br><span class="line">$(<span class="string">&quot;body&quot;</span>).append(<span class="string">&quot;&lt;h1&gt;后面&lt;/h1&gt;&quot;</span>)   </span><br></pre></td></tr></table></figure>
<h6 id="before-after实现"><a href="#before-after实现" class="headerlink" title="before-after实现"></a>before-after实现</h6><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p&quot;</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> p = <span class="built_in">document</span>.getElementById(<span class="string">&quot;p&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        p.before(<span class="string">&quot;前面&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        p.after(<span class="string">&quot;后面&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h5 id="3-获取样式表中的样式"><a href="#3-获取样式表中的样式" class="headerlink" title="3. 获取样式表中的样式"></a>3. 获取样式表中的样式</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">getComputedStyle(obj).attr</span><br></pre></td></tr></table></figure>
<h2 id="2-4文档碎片"><a href="#2-4文档碎片" class="headerlink" title="2-4文档碎片"></a>2-4文档碎片</h2><h4 id="文档碎片-脱离Dom"><a href="#文档碎片-脱离Dom" class="headerlink" title="文档碎片 脱离Dom"></a>文档碎片 脱离Dom</h4></li>
<li>原理：将Dom暂时寄存在fragment上，之后一次性添加到Dom上就可以了<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> parent = <span class="built_in">document</span>.getElementById(<span class="string">&quot;parent&quot;</span>)</span><br><span class="line">    <span class="keyword">var</span> frag = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> li =<span class="built_in">document</span>.createElement(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">        li.innerHTML = i;</span><br><span class="line">        <span class="comment">/* 寄存在文档碎片上 */</span></span><br><span class="line">        frag.appendChild(li);</span><br><span class="line">    &#125;</span><br><span class="line">    parent.appendChild(frag)</span><br></pre></td></tr></table></figure>
<h2 id="2-5批量操作"><a href="#2-5批量操作" class="headerlink" title="2-5批量操作"></a>2-5批量操作</h2>style<br> 属性<br> cssText  批量操作<br> getPropertyValue()<br> item()  返回对应位置的css属性名<br> removeProperty(attr)<br> setProperty(attr,value)<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> test = <span class="built_in">document</span>.getElementById(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    test.style.cssText = <span class="string">&quot;color:red;background-color:#333&quot;</span></span><br><span class="line">    <span class="built_in">console</span>.log(test.style.getPropertyValue(<span class="string">&quot;color&quot;</span>))</span><br><span class="line">    <span class="built_in">console</span>.log(test.style.item(<span class="number">0</span>))</span><br><span class="line">    test.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.style.removeProperty(<span class="string">&quot;color&quot;</span>)</span><br><span class="line">        <span class="built_in">this</span>.style.setProperty(<span class="string">&quot;background&quot;</span>,<span class="string">&quot;green&quot;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB--数据库操作</title>
    <url>/2021/08/02/MongoDB--%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><h5 id="选择和创建数据库"><a href="#选择和创建数据库" class="headerlink" title="选择和创建数据库"></a>选择和创建数据库</h5><p>选择和创建数据库的语法格式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">use 数据库名称</span><br></pre></td></tr></table></figure>

<p>查看有权限查看的所有的数据库命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">show dbs</span><br><span class="line">或</span><br><span class="line">show dababases</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：</strong> 在MongoDB中，集合只有在插入后才会创建！就是说，创建集合（数据表）后要再插入一个文档（记录），集合才会真正创建</p>
</blockquote>
<p>查看当前正在使用的数据库命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db</span><br></pre></td></tr></table></figure>
<p>MongoDB中默认的数据库为test，如果你没有选择数据库，集合将存放在test数据库中。</p>
<p>数据库名可以是满足以下条件的任意UTF-8字符串:</p>
<ul>
<li>不能是空字符串（””)。</li>
<li>不得含有’ ‘（空格)、.、$、/、\和\0 (空字符)。</li>
<li>应全部小写。</li>
<li>最多64字节。<br>有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库。</li>
<li><strong>admin</strong>： 从权限的角度来看，这是”root”数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。</li>
<li><strong>local</strong>: 这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合</li>
<li><strong>config</strong>: 当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息。</li>
</ul>
<h5 id="数据的删除"><a href="#数据的删除" class="headerlink" title="数据的删除"></a>数据的删除</h5><p>MongoDB删除数据库的语法格式如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure>
<p>提示：主要用来删除已经持久化的数据库</p>
]]></content>
      <tags>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB--文档基本CRUD</title>
    <url>/2021/08/02/MongoDB--%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%ACCRUD/</url>
    <content><![CDATA[<h2 id="文档基本CRUD"><a href="#文档基本CRUD" class="headerlink" title="文档基本CRUD"></a>文档基本CRUD</h2><p>文档（document）的数据库和JSON基本一样。<br>所有存储在集合中的数据都是BSON格式</p>
<blockquote>
<p>“BSON是一种类json的一种二进制形式的存储格式,简称Binary JSON,它和JSON一样,支持内嵌的文档对象和数组对象,但是BSON有JSON没有的一些数据类型,如Date和BinData类型。”</p>
</blockquote>
<h3 id="文档的插入"><a href="#文档的插入" class="headerlink" title="文档的插入"></a>文档的插入</h3><p>(1) 单个文档插入<br>使用 <code>insert()</code> 或 <code>save()</code> 方法向集合中插入文档，语法如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.insert(</span><br><span class="line">   &lt;document or array od documents&gt;,</span><br><span class="line">   &#123;</span><br><span class="line">       writeConcern: &lt;document&gt;,</span><br><span class="line">       ordered: &lt;boolean&gt;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>参数:<br>| Parameter    | Type              | Description                                        |<br>| ———— | —————– | ————————————————– |<br>| document     | document or array | document：要写入的文档。                           |<br>| writeConcern | document          | 写入策略，默认为 1，即要求确认写操作，0 是不要求。 |<br>| ordered      | boolean           | 指定是否按顺序写入，默认 true，按顺序写入。        |</p>
<p><strong>【示例】</strong><br>要向document的集合（表）中插入一条测试数据:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.insert(&#123;&quot;articleid&quot;: &quot;100000&quot;,&quot;content&quot;: &quot;今天天气真好，阳光明媚&quot;,&quot;userid&quot;: &quot;1001&quot;,&quot;nickname&quot;: &quot;Rose&quot;,&quot;createdatetime&quot;: new Date(),&quot;likenum&quot;: NumberInt(10),&quot;state&quot;: null&#125;)</span><br></pre></td></tr></table></figure>
<p>提示:</p>
<ul>
<li>comment集合如果不存在，则会隐式创建</li>
<li>mongo中的数字，默认情况下是double类型，如果存整型，必须使用函数<code>NumberInt(整型数字)</code>，否则取出来就有问题</li>
<li>插入当前日期使用<code>new Date()</code></li>
<li>插入的数据没有指定<code>_id</code>，会自动生成主键值</li>
<li>如果某字段没有值，可以赋值为null，或不写该字段</li>
</ul>
<p>执行后，如下，说明插入一个数据成功了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>文档中的键/值对是有序的</li>
<li>文档中的值不仅可以是在双引号里面的字符，还可以是其他几种数据类型（甚至可以是整个嵌入的文档）</li>
<li>MongoDB区分类型和大小写</li>
<li>MongoDB的文档不可以有重复的键</li>
<li>文档的键是字符串，除了少数例外情况，键可以是任意UTF-8字符<br>文档命名规范：</li>
<li>键不能包含\0字符（空字符），因为这个字符表示键的结束；</li>
<li>不能包含$和.，因为.和$是被保留的，只能在特定环境下使用；</li>
<li>以下划线”_”开头的键是保留的（不是严格要求的）</li>
</ul>
<p>(2) 批量插入<br>语法如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.insertMany(</span><br><span class="line">   [&lt;document1&gt;, &lt;document2&gt;], ...],</span><br><span class="line">   &#123;</span><br><span class="line">       writeConcern: &lt;document&gt;,</span><br><span class="line">       ordered: &lt;boolean&gt;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>参数:<br>| Parameter    | Type              | Description                                        |<br>| ———— | —————– | ————————————————– |<br>| document     | document or array | document：要写入的文档。                           |<br>| writeConcern | document          | 写入策略，默认为 1，即要求确认写操作，0 是不要求。 |<br>| ordered      | boolean           | 指定是否按顺序写入，默认 true，按顺序写入。        |</p>
<p><strong>【示例】</strong><br>批量插入多条文档的评论：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.insertMany([</span><br><span class="line">  &#123;&quot;_id&quot;: &quot;1&quot;, &quot;articleid&quot;: &quot;100001&quot;,&quot;content&quot;: &quot;给大家讲一下，这个歌单是私人定制，根据你听的歌来制定的歌单，所以会有你收藏的歌，每个人都不一样的。&quot;,&quot;userid&quot;: &quot;1002&quot;,&quot;nickname&quot;: &quot;春天吃了自己&quot;,&quot;createdatetime&quot;: new Date(&quot;2020-1-19T22:08:15.522z&quot;),&quot;likenum&quot;: NumberInt(1000),&quot;state&quot;: &quot;1&quot;&#125;,</span><br><span class="line">  &#123;&quot;_id&quot;: &quot;2&quot;, &quot;articleid&quot;: &quot;100001&quot;,&quot;content&quot;: &quot;我们收藏的是同一个歌单，听的是不同的歌曲。&quot;,&quot;userid&quot;: &quot;1003&quot;,&quot;nickname&quot;: &quot;景随风&quot;,&quot;createdatetime&quot;: new Date(&quot;2020-1-20T23:23:12.485z&quot;),&quot;likenum&quot;: NumberInt(8888),&quot;state&quot;: &quot;1&quot;&#125;,</span><br><span class="line">  &#123;&quot;_id&quot;: &quot;3&quot;, &quot;articleid&quot;: &quot;100001&quot;,&quot;content&quot;: &quot;有些歌你已经忘了,网易云还帮你记着.&quot;,&quot;userid&quot;: &quot;1004&quot;,&quot;nickname&quot;: &quot;低温低气压&quot;,&quot;createdatetime&quot;: new Date(&quot;2020-2-29-T08:18:35.288z&quot;),&quot;likenum&quot;: NumberInt(999),&quot;state&quot;: &quot;1&quot;&#125;,</span><br><span class="line">  &#123;&quot;_id&quot;: &quot;4&quot;, &quot;articleid&quot;: &quot;100001&quot;,&quot;content&quot;: &quot;今天从《Let Me Love You》听起&quot;,&quot;userid&quot;: &quot;1005&quot;,&quot;nickname&quot;: &quot;银牙不是熊猫&quot;,&quot;createdatetime&quot;: new Date(),&quot;likenum&quot;: NumberInt(),&quot;state&quot;: &quot;1&quot;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure>

<h5 id="文档插入使用try-catch"><a href="#文档插入使用try-catch" class="headerlink" title="文档插入使用try catch"></a>文档插入使用try catch</h5><p>因为批量插入由于数据较多容易出现失败，因此，可以使用try catch进行异常捕捉处理</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">try&#123;</span><br><span class="line">db.document.insertMany([</span><br><span class="line">  &#123;&quot;_id&quot;: &quot;5&quot;, &quot;articleid&quot;: &quot;100001&quot;,&quot;content&quot;: &quot;给大家讲一下，这个歌单是私人定制，根据你听的歌来制定的歌单，所以会有你收藏的歌，每个人都不一样的。&quot;,&quot;userid&quot;: &quot;1002&quot;,&quot;nickname&quot;: &quot;春天吃了自己&quot;,&quot;createdatetime&quot;: new Date(&quot;2020-1-19T22:08:15.522z&quot;),&quot;likenum&quot;: NumberInt(1000),&quot;state&quot;: &quot;1&quot;&#125;,</span><br><span class="line">  &#123;&quot;_id&quot;: &quot;6&quot;, &quot;articleid&quot;: &quot;100001&quot;,&quot;content&quot;: &quot;我们收藏的是同一个歌单，听的是不同的歌曲。&quot;,&quot;userid&quot;: &quot;1003&quot;,&quot;nickname&quot;: &quot;景随风&quot;,&quot;createdatetime&quot;: new Date(&quot;2020-1-20T23:23:12.485z&quot;),&quot;likenum&quot;: NumberInt(8888),&quot;state&quot;: &quot;1&quot;&#125;</span><br><span class="line">])</span><br><span class="line">&#125; catch(e) &#123;</span><br><span class="line">  print(e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="文档的基本查询"><a href="#文档的基本查询" class="headerlink" title="文档的基本查询"></a>文档的基本查询</h3><p>查询数据的语法格式如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.find(&lt;query&gt;, &lt;projection&gt;)</span><br></pre></td></tr></table></figure>

<p>参数:<br>| Parameter      | Type              | Description                                        |<br>| ————– | —————– | ————————————————– |<br>| query      | document | 可选，使用查询操作符指定查询条件。           |<br>| projection | document          | 可选，使用投影操作符指定返回的键。查询时返回文档中所有键值， 只需省略该参数即可（默认省略）。 |</p>
<p><strong>【示例】</strong><br>(1) 查询所有<br>如果我们要查询<code>document</code>集合的所有的文档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.document.find()</span><br><span class="line">或</span><br><span class="line">db.document.find(&#123;&#125;)</span><br></pre></td></tr></table></figure>
<p>这里你会发现每条文档会有一个叫<code>_id</code>的字段，这个相当于我们原来关系数据中表的主键，当你在插入文档记录时没有指定该字段，MongoDB会自动创建，其类型是ObjectID类型。</p>
<p>如果我们在插入文档记录时该字段也可以，其类型是ObjectID类型，也可以是MongoDB支持的任意类型。</p>
<p>如果我想按一定条件来查询，比如我想查询<code>userid为1003</code>的记录，怎么办？很简单！只需要在<code>find()</code>中田间参数即可，参数也是json格式，如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;userid: &#x27;1003&#x27;&#125;)</span><br></pre></td></tr></table></figure>

<p>如果你只需要返回符合的第一条数据，我们可以使用<code>findOne</code>命令来实现，语法和<code>find</code>一样。<br>如：查询用户编号是1003的记录，但是最多返回条件的第一条记录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.findOne(&#123;userid: &#x27;1003&#x27;&#125;)</span><br></pre></td></tr></table></figure>

<p>（2）投影查询（Projection Query）<br>如果要查询结果只返回部分字段，则需要使用投影查询（不显示所有字段，只显示指定的字段）<br>如：查询结果只显示<code>_id、userid、nickname</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;userid: &#x27;1003&#x27;&#125;,&#123;userid: 1, nickname: 1&#125;)</span><br></pre></td></tr></table></figure>
<p>默认<code>_id</code>会显示<br>如：查询结果只显示<code>userid、nickname</code>，不显示<code>_id</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;userid: &#x27;1003&#x27;&#125;,&#123;userid: 1, nickname: 1, _id: 0&#125;)</span><br></pre></td></tr></table></figure>
<p>在例如：查询所有数据，但只显示<code>_id、userid、nickname</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;&#125;,&#123;userid: 1, nickname: 1&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="文档的更新"><a href="#文档的更新" class="headerlink" title="文档的更新"></a>文档的更新</h3><p>更新文档的语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">db.集合名字.update(query, update, options)</span><br><span class="line">db.集合名字.update(</span><br><span class="line">   &lt;query&gt;,</span><br><span class="line">   &lt;update&gt;,</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="attr">upsert</span>: &lt;boolean&gt;,</span><br><span class="line">     multi: &lt;boolean&gt;,</span><br><span class="line">     writeConcern: &lt;<span class="built_in">document</span>&gt;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>参数:<br>| Parameter      | Type              | Description                                        |<br>| ————– | —————– | ————————————————– |<br>| query      | document | update的查询条件，类似sql update查询内where后面的。 |<br>| update | document or pipeline | update的对象和一些更新的操作符（如$,$inc…）等，也可以理解为sql update查询内set后面的 |<br>| upsert | boolean | 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。 |<br>| multi | boolean | 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。 |<br>| writeConcern | document | 可选，抛出异常的级别。 |</p>
<p><strong>【示例】</strong><br>(1) 覆盖的修改<br>如果我们想修改<code>_id</code>为1的记录，点赞量为<code>1001</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.update(&#123;_id: &quot;1&quot;&#125;,&#123;likenum: NumberInt(1001)&#125;)</span><br></pre></td></tr></table></figure>
<p>执行后，我们发现，这条文档除了<code>likenum</code>字段其它字段都不见了。</p>
<p>(2)局部修改<br>为了解决这个问题，我们需要使用修改器<code>$set</code>来实现<br>如果我们想修改<code>_id</code>为2的记录，点赞量为<code>8812</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.update(&#123;_id: &quot;2&quot;&#125;,&#123;$set:&#123;likenum: NumberInt(8812)&#125;&#125;)</span><br></pre></td></tr></table></figure>

<p>(3)批量的修改<br>更新所有用户为<code>1003</code>的用户的昵称为<code>moppet</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 默认只修改第一条数据</span></span><br><span class="line">db.document.update(&#123;<span class="attr">userid</span>: <span class="string">&quot;1003&quot;</span>&#125;,&#123;<span class="attr">$set</span>:&#123;<span class="attr">nickname</span>: <span class="string">&quot;moppet&quot;</span>&#125;&#125;)</span><br><span class="line"><span class="comment">// 修改所有符合条件的数据</span></span><br><span class="line">db.document.update(&#123;<span class="attr">userid</span>: <span class="string">&quot;1003&quot;</span>&#125;,&#123;<span class="attr">$set</span>:&#123;<span class="attr">nickname</span>: <span class="string">&quot;moppet&quot;</span>&#125;&#125;,&#123;<span class="attr">multi</span>:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure>

<p>(4) 列值增长的修改<br>如果我们想要实现对某列值在原有的基础上进行增加或减少，可以使用<code>$inc</code>运算符来实现<br>需求：对3号数据的点赞数，每次递增1</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.update(&#123;_id: &quot;3&quot;&#125;,&#123;$inc:&#123;likenum: NumberInt(1)&#125;&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h3><p>删除文档的语法结构：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名词.remove(条件)</span><br></pre></td></tr></table></figure>
<p>如果想删除全部数据：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.remove(&#123;&#125;)</span><br></pre></td></tr></table></figure>
<p>如果想删除<code>_id=1</code>的记录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.remove(&#123;_id: &quot;1&quot;&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB--文档的更多查询</title>
    <url>/2021/08/02/MongoDB--%E6%96%87%E6%A1%A3%E7%9A%84%E6%9B%B4%E5%A4%9A%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h2 id="正则的复杂条件查询"><a href="#正则的复杂条件查询" class="headerlink" title="正则的复杂条件查询"></a>正则的复杂条件查询</h2><p>MongoDB的模糊查询是通过<strong>正则表达式</strong>方式实现的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名称.find(&#123;字段: /正则表达式/&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>提示：</strong> 正则表达式是js的语法，直接量的写法<br>例如：要查询评论内容包容<code>的</code>的所有文档：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;content: /的/&#125;)</span><br></pre></td></tr></table></figure>
<p>例如：要查询评论内容中以<code>有些</code>开头：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;content: /^有些/&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="比较查询"><a href="#比较查询" class="headerlink" title="比较查询"></a>比较查询</h2><p>&lt;,&lt;=,&gt;,&gt;= ,!=这个操作符也是很常用的，格式如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名称.find(&#123;&quot;field&quot;: &#123; $gt: value &#125;&#125;) // 大于： field &gt; value</span><br><span class="line">db.集合名称.find(&#123;&quot;field&quot;: &#123; $lt: value &#125;&#125;) // 小于： field &lt; value</span><br><span class="line">db.集合名称.find(&#123;&quot;field&quot;: &#123; $gte: value &#125;&#125;) // 大于等于： field &gt;= value</span><br><span class="line">db.集合名称.find(&#123;&quot;field&quot;: &#123; $lte: value &#125;&#125;) // 小于等于： field &lt;= value</span><br><span class="line">db.集合名称.find(&#123;&quot;field&quot;: &#123; $ne: value &#125;&#125;) // 不等于： field != value</span><br></pre></td></tr></table></figure>
<p>例如：查询<code>likenum</code>字段数据大于<code>700</code>的记录:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;likenum: &#123; $gt: NumberInt(700)&#125;&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="包含查询"><a href="#包含查询" class="headerlink" title="包含查询"></a>包含查询</h2><p>包含使用<code>$in</code>操作符<br>例如：查询<code>userid</code>字段包含1003或1004的文档</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;userid: &#123; $in: [&quot;1003&quot;, &quot;1004&quot;]&#125;&#125;)</span><br></pre></td></tr></table></figure>
<p>不包含使用<code>$nin</code>操作符<br>例如：查询<code>userid</code>字段不包含1003或1004的文档</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;userid: &#123; $nin: [&quot;1003&quot;, &quot;1004&quot;]&#125;&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="条件连接查询"><a href="#条件连接查询" class="headerlink" title="条件连接查询"></a>条件连接查询</h2><p>我们如果需要查询同时满足两个以上条件，需要使用<code>$and</code>操作符将条件进行关联<br>格式为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">and:[&#123;&#125;,&#123;&#125;,&#123;&#125;]</span></span><br></pre></td></tr></table></figure>
<p>例如：查询<code>likenum</code>字段包含大于等于700并且小于2000的文档：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;$and:[&#123;likenum: &#123; $gte: NumberInt(700)&#125;&#125;,&#123;likenum: &#123; $lt: NumberInt(2000)&#125;&#125;]&#125;)</span><br></pre></td></tr></table></figure>

<p>如果两个以上条件之间是或者关系，需要使用<code>$or</code>操作符将条件进行关<br>联<br>例如：查询<code>likenum</code>字段包含大于等于700或小于2000的文档：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find(&#123;$or:[&#123;likenum: &#123; $gte: NumberInt(700)&#125;&#125;,&#123;likenum: &#123; $lt: NumberInt(2000)&#125;&#125;]&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB--索引-Index</title>
    <url>/2021/08/02/MongoDB--%E7%B4%A2%E5%BC%95-Index/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>索引支持在MongoDB中高效地执行查询。如果没有索引，MongoDB必须执行全集合扫描，即扫描集合中的每个文档,以选择与查询语句匹配的文档。这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。</p>
<p>如果查询存在适当的索引，MongoDB可以使用该索引限制必须检查的文档数。</p>
<p>索引是特殊的数据结构，它以易于遍历的形式存储集合数据集的一小部分。</p>
<p>索引存储特定字段或一组字段的值，按字段值排序。索引项的排序支持有效的相等匹配和基于范围的查询操作。此外，MongoDB还可以使用索引中的排序返回排序结果。</p>
<p>官网文档: <a href="https://docs.mongodb.com/manual/indexes/">https://docs.mongodb.com/manual/indexes/</a></p>
<p>了解:<br>MongoDB索引使用B树数据结构（确切的说是B-Tree,MySQL是B+Tree)</p>
<h2 id="索引的类型"><a href="#索引的类型" class="headerlink" title="索引的类型"></a>索引的类型</h2><h4 id="单字段索引"><a href="#单字段索引" class="headerlink" title="单字段索引"></a>单字段索引</h4><p>MongoDB支持在文档的单个字段上创建用户定义的升序/降序索引，称为单字段索引(Single Field lndex)。</p>
<p>对于单个字段索引和排序操作，索引键的排序顺序(即升序或降序)并不重要，因为MongoDB可以在任何方向上遍历索引。</p>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210802190234985.png" alt="image-20210802190234985"></p>
<h4 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h4><p>MongoDB支持多个字段的用户定义索引，即复合索引(Compound Index)</p>
<p>复合索引中列出的字段顺序具有重要的意义。(eg:如果复合索引由{userid:1，score:-1}组成，则索引首先按照userid正序排序，然后在每个userid的值内，再按照score倒序排序)</p>
<p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210802190255948.png" alt="image-20210802190255948"></p>
<h4 id="其它索引"><a href="#其它索引" class="headerlink" title="其它索引"></a>其它索引</h4><p>地理空间索引(Geospatial Index)、文本索引(Text Indexes)、哈希索引(Hashed  Indexes)</p>
<p>地理空间索引（Geospatial Index） 为了支持对地理空间坐标数据的有效查询，MongoDB提供了两种特殊的索引：返回结果时使用平面几何的二维索引和返回结果时使用球面 几何的二维球面索引。</p>
<p>文本索引（Text Indexes） MongoDB提供了一种文本索引类型，支持在集合中搜索字符串内容。这些文本索引不存储特定于语言的停止词（例如“the”、“a”、“or”）， 而将集合中的词作为词干，只存储根词。</p>
<p>哈希索引（Hashed Indexes） 为了支持基于散列的分片，MongoDB提供了散列索引类型，它对字段值的散列进行索引。这些索引在其范围内的值分布更加随机，但只支 持相等匹配，不支持基于范围的查询。</p>
<h2 id="索引的管理操作"><a href="#索引的管理操作" class="headerlink" title="索引的管理操作"></a>索引的管理操作</h2><h4 id="索引的查看"><a href="#索引的查看" class="headerlink" title="索引的查看"></a>索引的查看</h4><blockquote>
<p><strong>说明：</strong><br>    返回一个集合中的所有索引的数组</p>
</blockquote>
<p>语法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.getIndexes()</span><br></pre></td></tr></table></figure>
<p><strong>【示例】</strong><br>查看document集合中所有的所有索引情况</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> db.document.getIndexes()</span></span><br><span class="line">[</span><br><span class="line">        &#123;</span><br><span class="line">                &quot;v&quot; : 2,</span><br><span class="line">                &quot;key&quot; : &#123;</span><br><span class="line">                        &quot;_id&quot; : 1</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;name&quot; : &quot;_id_&quot;,</span><br><span class="line">                &quot;ns&quot; : &quot;articledb.document&quot;</span><br><span class="line">        &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>结果中显示的是默认<code>_id</code>索引：<br>MongoDB在创建集合的过程中，在<code> _id</code> 字段上创建一个唯一的索引，默认名字为<code> _id_</code>，该索引可防止客户端插入两个具有相同值的文档，不能在<code>_id</code>字段上删除此索引。</p>
<blockquote>
<p><strong>注意：</strong>该索引是唯一索引，因此值不能重复，即 _id 值不能重复的。在分片集群中，通常使用 _id 作为片键。</p>
</blockquote>
<h4 id="索引的创建"><a href="#索引的创建" class="headerlink" title="索引的创建"></a>索引的创建</h4><blockquote>
<p><strong>说明：</strong><br>    在集合上创建索引</p>
</blockquote>
<p>语法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.createIndex(keys, options)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>keys</td>
<td>document</td>
<td>包含字段和值对的文档，其中字段是索引键，值描述该字段的索引类型。对于字段上的升序索引，请指定值1;对于降序索引，请指定值-1。比如∶{字段:1或-1}，其中1为指定按升序创建索引，如果你想按降序来创建索引指定为-1即可。另外，MongoDB支持几种不同的索引类型，包括文本、地理空间和哈希索引。</td>
</tr>
<tr>
<td>options</td>
<td>document</td>
<td>可选。包含一组控制索引创建的选项的文档。有关详细信息，请参见选项详情列表。</td>
</tr>
</tbody></table>
<p>options(更多选项)列表：</p>
<table>
<thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>background</td>
<td>Boolean</td>
<td>建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加”background”可选参数。”background”默认值为<strong>false</strong>。</td>
</tr>
<tr>
<td>unique</td>
<td>Boolean</td>
<td>建立的索引是否唯一。指定为true创建唯一索引。默认值为<strong>false</strong>.</td>
</tr>
<tr>
<td>name</td>
<td>string</td>
<td>索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称。</td>
</tr>
<tr>
<td>dropDups</td>
<td>Boolean</td>
<td>3.0+版本已废弃。在建立唯一索引时是否删除重复记录,指定<strong>true</strong>创建唯一索引。默认值为<strong>false</strong>.</td>
</tr>
<tr>
<td>sparse</td>
<td>Boolean</td>
<td>对文档中不存在的字段数据不启用索引;这个参数需要特别注意，如果设置为true的话，在索引字段中不会查询出不包含对应字段的文档.。默认值为<strong>false</strong>.</td>
</tr>
<tr>
<td>expireAfterSeconds</td>
<td>integer</td>
<td>指定一个以秒为单位的数值，完成TTL设定，设定集合的生存时间。</td>
</tr>
<tr>
<td>v</td>
<td>index version</td>
<td>索引的版本号。默认的索引版本取决于mongod创建索引时运行的版本。</td>
</tr>
<tr>
<td>weights</td>
<td>document</td>
<td>索引权重值，数值在1到99,999之间，表示该索引相对于其他索引字段的得分权重。</td>
</tr>
<tr>
<td>default_language</td>
<td>string</td>
<td>对于文本索引，该参数决定了停用词及词千和词器的规则的列表。默认为英语</td>
</tr>
<tr>
<td>language_overridestring</td>
<td></td>
<td>对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的language，默认值为language</td>
</tr>
</tbody></table>
<p>【示例】<br>1）单字段索引示例：对<code>userid</code>字段建立索引</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; db.document.createIndex(&#123;userid: 1&#125;)</span><br><span class="line">&#123;</span><br><span class="line">        &quot;createdCollectionAutomatically&quot; : false,</span><br><span class="line">        &quot;numIndexesBefore&quot; : 1,</span><br><span class="line">        &quot;numIndexesAfter&quot; : 2,</span><br><span class="line">        &quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参数1：按升序创建索引</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> db.document.getIndexes()</span></span><br><span class="line">[</span><br><span class="line">        &#123;</span><br><span class="line">                &quot;v&quot; : 2,</span><br><span class="line">                &quot;key&quot; : &#123;</span><br><span class="line">                        &quot;_id&quot; : 1</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;name&quot; : &quot;_id_&quot;,</span><br><span class="line">                &quot;ns&quot; : &quot;articledb.document&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">                &quot;v&quot; : 2,</span><br><span class="line">                &quot;key&quot; : &#123;</span><br><span class="line">                        &quot;userid&quot; : 1</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;name&quot; : &quot;userid_1&quot;,</span><br><span class="line">                &quot;ns&quot; : &quot;articledb.document&quot;</span><br><span class="line">        &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>


<p>2）复合索引：<br>对<code>userid</code> 和 <code>nickname </code>同时建立复合（Compound）索引：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> db.document.createIndex(&#123;userid: 1,nickname: -1&#125;)</span></span><br><span class="line">&#123;</span><br><span class="line">        &quot;createdCollectionAutomatically&quot; : false,</span><br><span class="line">        &quot;numIndexesBefore&quot; : 2,</span><br><span class="line">        &quot;numIndexesAfter&quot; : 3,</span><br><span class="line">        &quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="索引的移除"><a href="#索引的移除" class="headerlink" title="索引的移除"></a>索引的移除</h4><blockquote>
<p><strong>说明：</strong><br>    可以移除指定的索引，或者移除所有的所有</p>
</blockquote>
<h5 id="指定索引的移除"><a href="#指定索引的移除" class="headerlink" title="指定索引的移除"></a>指定索引的移除</h5><p>语法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.dropIndex(index)</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<table>
<thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>index</td>
<td>string or document</td>
<td>指定要删除的索引。可以通过索引名称或索引规范文档指定索引。若要删除文本索引，请指定索引名称。</td>
</tr>
</tbody></table>
<p>【示例】<br>删除<code>document</code>集合中<code> userid</code>字段上的升序索引：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> db.document.dropIndex(&#123;userid: 1&#125;)</span></span><br><span class="line">&#123; &quot;nIndexesWas&quot; : 3, &quot;ok&quot; : 1 &#125;</span><br></pre></td></tr></table></figure>
<h5 id="所有索引的移除"><a href="#所有索引的移除" class="headerlink" title="所有索引的移除"></a>所有索引的移除</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> db.document.dropIndexes()</span></span><br><span class="line">&#123;</span><br><span class="line">        &quot;nIndexesWas&quot; : 2,</span><br><span class="line">        &quot;msg&quot; : &quot;non-_id indexes dropped for collection&quot;,</span><br><span class="line">        &quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：</strong> <code> _id</code>的字段的索引是无法删除的，只能删除非 <code>_id</code>字段的索引。</p>
</blockquote>
<h2 id="索引的使用"><a href="#索引的使用" class="headerlink" title="索引的使用"></a>索引的使用</h2><h4 id="执行计划"><a href="#执行计划" class="headerlink" title="执行计划"></a>执行计划</h4><p>分析查询性能（Analyze Query Performance）通常使用执行计划（解释计划、Explain Plan）来查看查询的情况，如查询耗费的时间、是否基于索引查询等。<br>那么，通常，如果想知道建立的索引是否有效，效果如何，都需要通过执行计划查看。<br>语法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.collection.find(query,options).explain(options)</span><br></pre></td></tr></table></figure>
<p>【示例】<br>查看根据<code>userid</code>查询数据的情况</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> db.document.find(&#123;userid: <span class="string">&quot;1003&quot;</span>&#125;).explain()</span></span><br><span class="line">&#123;</span><br><span class="line">        &quot;queryPlanner&quot; : &#123;</span><br><span class="line">                &quot;plannerVersion&quot; : 1,</span><br><span class="line">                &quot;namespace&quot; : &quot;articledb.document&quot;,</span><br><span class="line">                &quot;indexFilterSet&quot; : false,</span><br><span class="line">                &quot;parsedQuery&quot; : &#123;</span><br><span class="line">                        &quot;userid&quot; : &#123;</span><br><span class="line">                                &quot;$eq&quot; : &quot;1003&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;queryHash&quot; : &quot;37A12FC3&quot;,</span><br><span class="line">                &quot;planCacheKey&quot; : &quot;37A12FC3&quot;,</span><br><span class="line">                &quot;winningPlan&quot; : &#123;</span><br><span class="line">                        &quot;stage&quot; : &quot;COLLSCAN&quot;,</span><br><span class="line">                        &quot;filter&quot; : &#123;</span><br><span class="line">                                &quot;userid&quot; : &#123;</span><br><span class="line">                                        &quot;$eq&quot; : &quot;1003&quot;</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &quot;direction&quot; : &quot;forward&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;rejectedPlans&quot; : [ ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;serverInfo&quot; : &#123;</span><br><span class="line">                &quot;host&quot; : &quot;WIN-B640FEQTBJ0&quot;,</span><br><span class="line">                &quot;port&quot; : 27017,</span><br><span class="line">                &quot;version&quot; : &quot;4.2.15&quot;,</span><br><span class="line">                &quot;gitVersion&quot; : &quot;d7fd78dead621a539c20791a93abec34bb1be385&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="D:\hexo\dimples\source_posts\explain.png" alt="explain"></p>
<h4 id="涵盖的查询"><a href="#涵盖的查询" class="headerlink" title="涵盖的查询"></a>涵盖的查询</h4><p>当查询条件和查询的投影仅包含索引字段时，MongoDB直接从索引返回结果，而不扫描任何文档或将文档带入内存。 这些覆盖的查询可以非常有效。</p>
<p><img src="D:\hexo\dimples\source_posts\co.png" alt="co"></p>
<p>【示例】</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> db.document.find(&#123;userid: <span class="string">&quot;1003&quot;</span>&#125;,&#123;userid:1,_id:0&#125;)</span></span><br><span class="line">&#123; &quot;userid&quot; : &quot;1003&quot; &#125;</span><br><span class="line">&#123; &quot;userid&quot; : &quot;1003&quot; &#125;</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> db.document.find(&#123;userid: <span class="string">&quot;1003&quot;</span>&#125;,&#123;userid:1,_id:0&#125;).explain()</span></span><br><span class="line">&#123;</span><br><span class="line">        &quot;queryPlanner&quot; : &#123;</span><br><span class="line">                &quot;plannerVersion&quot; : 1,</span><br><span class="line">                &quot;namespace&quot; : &quot;articledb.document&quot;,</span><br><span class="line">                &quot;indexFilterSet&quot; : false,</span><br><span class="line">                &quot;parsedQuery&quot; : &#123;</span><br><span class="line">                        &quot;userid&quot; : &#123;</span><br><span class="line">                                &quot;$eq&quot; : &quot;1003&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;queryHash&quot; : &quot;03EEB3D0&quot;,</span><br><span class="line">                &quot;planCacheKey&quot; : &quot;35A92F08&quot;,</span><br><span class="line">                &quot;winningPlan&quot; : &#123;</span><br><span class="line">                        &quot;stage&quot; : &quot;PROJECTION_COVERED&quot;,</span><br><span class="line">                        &quot;transformBy&quot; : &#123;</span><br><span class="line">                                &quot;userid&quot; : 1,</span><br><span class="line">                                &quot;_id&quot; : 0</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &quot;inputStage&quot; : &#123;</span><br><span class="line">                                &quot;stage&quot; : &quot;IXSCAN&quot;,</span><br><span class="line">                                &quot;keyPattern&quot; : &#123;</span><br><span class="line">                                        &quot;userid&quot; : 1</span><br><span class="line">                                &#125;,</span><br><span class="line">                                &quot;indexName&quot; : &quot;userid_1&quot;,</span><br><span class="line">                                &quot;isMultiKey&quot; : false,</span><br><span class="line">                                &quot;multiKeyPaths&quot; : &#123;</span><br><span class="line">                                        &quot;userid&quot; : [ ]</span><br><span class="line">                                &#125;,</span><br><span class="line">                                &quot;isUnique&quot; : false,</span><br><span class="line">                                &quot;isSparse&quot; : false,</span><br><span class="line">                                &quot;isPartial&quot; : false,</span><br><span class="line">                                &quot;indexVersion&quot; : 2,</span><br><span class="line">                                &quot;direction&quot; : &quot;forward&quot;,</span><br><span class="line">                                &quot;indexBounds&quot; : &#123;</span><br><span class="line">                                        &quot;userid&quot; : [</span><br><span class="line">                                                &quot;[\&quot;1003\&quot;, \&quot;1003\&quot;]&quot;</span><br><span class="line">                                        ]</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;rejectedPlans&quot; : [ ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;serverInfo&quot; : &#123;</span><br><span class="line">                &quot;host&quot; : &quot;WIN-B640FEQTBJ0&quot;,</span><br><span class="line">                &quot;port&quot; : 27017,</span><br><span class="line">                &quot;version&quot; : &quot;4.2.15&quot;,</span><br><span class="line">                &quot;gitVersion&quot; : &quot;d7fd78dead621a539c20791a93abec34bb1be385&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB--集合操作</title>
    <url>/2021/08/02/MongoDB--%E9%9B%86%E5%90%88%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><p>集合，类似关系型数据库中的表<br>可以显示的创建，也可以隐式的创建</p>
<h5 id="集合的显示创建-了解"><a href="#集合的显示创建-了解" class="headerlink" title="集合的显示创建(了解)"></a>集合的显示创建(了解)</h5><p>基本语法格式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.createCollection(name)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>name: 要创建的集合名称</li>
</ul>
<p>例如：创建一个名为<code>mycollection</code>的普通集合。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.createCollection(&quot;mycollection&quot;)</span><br></pre></td></tr></table></figure>
<p>查看当前库中的表：show tables命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">show collections</span><br><span class="line">或</span><br><span class="line">show tables</span><br></pre></td></tr></table></figure>

<p>集合的命名规范：</p>
<ul>
<li>集合名不能是空字符串(“”)</li>
<li>集合名不能包含 \0 字符(空字符)，这个字符标识集合名的结束</li>
<li>集合名不能以 “system.” 开头，这是为系统保留的前缀</li>
<li>用户创建的集合名字不能有保留字符。有些驱动程序的确支持在集合名里面包含，这是因为某些系统生成的集合中包含该字符。除非你要访问这种系统创建的合集，否则千万不要在名字里出现$</li>
</ul>
<h5 id="集合的隐式创建"><a href="#集合的隐式创建" class="headerlink" title="集合的隐式创建"></a>集合的隐式创建</h5><p>当前一个集合中插入一个文档的时候，如果集合不存在，则会自动创建集合。<br>详见<code>文档的插入</code>章节<br>提示：通常我们使用隐式创建文档即可</p>
<h5 id="集合的删除"><a href="#集合的删除" class="headerlink" title="集合的删除"></a>集合的删除</h5><p>集合删除语法格式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.drop()</span><br></pre></td></tr></table></figure>
<p><strong>返回值</strong><br>如果成功删除选定集合，则 drop() 方法返回 true，否则返回 false。</p>
<p>例如：要删除<code>mycollection</code>集合</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.mycollection.drop()</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB--文档的分页查询</title>
    <url>/2021/08/02/MongoDB--%E6%96%87%E6%A1%A3%E7%9A%84%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h2 id="统计查询"><a href="#统计查询" class="headerlink" title="统计查询"></a>统计查询</h2><p>统计查询使用<code>count()</code>方法</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.count(query, options)</span><br></pre></td></tr></table></figure>
<p>参数:<br>| Parameter | Type     | Description                    |<br>| ——— | ——– | —————————— |<br>| query     | document | 查询选择的条件                 |<br>| options   | document | 可选。用于修改计数的额外选项。 |</p>
<p><strong>【示例】</strong><br>(1) 统计所有的记录数<br>统计<code>document</code>集合的所有的记录数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.count()</span><br></pre></td></tr></table></figure>

<p>(2) 按条件统计记录数<br>统计<code>userid为1003</code>的所有的记录数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.count(&#123;userid: &quot;1003&quot;&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="分页列表查询"><a href="#分页列表查询" class="headerlink" title="分页列表查询"></a>分页列表查询</h2><p>可以使用<code>limit()</code>方法来读取指定数量的数据，使用<code>skip()</code>方法来跳过指定数量的数据。<br>基本语法如下所示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.find().limit(NUMBER).skip(NUMBER)</span><br></pre></td></tr></table></figure>

<p>如果你想返回指定条数的记录，可以在<code>fin()</code>方法后调用<code>limit()</code>来返回结果（TopN），默认值20</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find().limit(3)  // 显示前3条数据</span><br></pre></td></tr></table></figure>
<p><code>skip()</code>方法同样接受一个数字参数作为跳过的记录条数。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find().skip(3) // 不显示前3条数据</span><br></pre></td></tr></table></figure>

<p>分页查询：需求：每页2歌，第二页开始：跳过前两条数，按着值显示3条和4条数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">// 第一页</span><br><span class="line">db.document.find().skip(0).limit(2) // 显示前2条数据</span><br><span class="line">// 第二页</span><br><span class="line">db.document.find().skip(2).limit(2) // 不显示前2条数据</span><br><span class="line">// 第三页</span><br><span class="line">db.document.find().skip(4).limit(2) // 不显示前4条数据</span><br></pre></td></tr></table></figure>

<h2 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h2><p><code>sort()</code>方法对数据进行排序，<code>sort()</code>方法可以通过参数指定排序的字段，并使用<code>1</code>和<code>-1</code>来指定排序的方式，其中<code>1</code>为升序排列，<code>-1</code>为降序排列。<br>基本语法如下所示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.集合名字.find().sort(&#123;KEY:1&#125;)</span><br><span class="line">或</span><br><span class="line">db.集合名字.find().sort(排序方式)</span><br></pre></td></tr></table></figure>
<p>例如：<br>对<code>userid</code>降序排列，并对<code>likenum</code>升序排列</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">db.document.find().sort(&#123;userid: -1, likenum: 1&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>提示：</strong> <code>skip()</code>，<code>limit()</code>，<code>sort()</code>三个放在一起执行的时候，执行的顺序先<code>sort()</code>，然后是<code>skip()</code>，最后是显示的<code>limit()</code>，和命令编写的顺序无关。</p>
</blockquote>
]]></content>
      <tags>
        <tag>MongoDB</tag>
      </tags>
  </entry>
</search>
